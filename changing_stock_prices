{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled14.ipynb",
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "id": "qD_XLHXTYxsS",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import pandas as pd\n",
        "\n",
        "def take_prices(filepath): # извлечь цены котировок акции ежегодно по всему периоду\n",
        "    f = open(filepath, encoding = 'utf-8')\n",
        "    years = [str(y) for y in range(2010, 2020)]\n",
        "    prices = []\n",
        "    lines = f.readlines()\n",
        "    for i in range(len(years)):\n",
        "        prices.append([])\n",
        "        for line in lines:\n",
        "            if str(line.split(',')[2]).startswith(years[i]):\n",
        "                prices[i].append(float(line.split(',')[7]))\n",
        "    return prices\n",
        "\n",
        "def count_difs(year, prices): # посчитать максимальные и минимальные скачки котировок акции ежегодно\n",
        "    years_nums = {'2010': 0, '2011': 1, '2012': 2, '2013': 3, '2014': 4, '2015': 5, '2016': 6, '2017': 7, '2018': 8, '2019': 9}\n",
        "    up_difs = []\n",
        "    down_difs = []\n",
        "    difs = []\n",
        "    for j in range(1, len(prices[years_nums[year]])):\n",
        "        difs.append((prices[years_nums[year]][j] - prices[years_nums[year]][j - 1])/(prices[years_nums[year]][j - 1]/100))\n",
        "    up_difs = max(difs)\n",
        "    down_difs = min(difs)\n",
        "    return up_difs, down_difs\n",
        "\n",
        "tickers = ['AFLT', 'GAZP', 'LKOH', 'SIBN', 'SBER']\n",
        "\n",
        "years = [str(i) for i in range(2010,2020)]\n",
        "\n",
        "myDataPath = '/Users/veraivanova/Downloads/акции/'\n",
        "upBreaks = pd.DataFrame()\n",
        "downBreaks = pd.DataFrame()\n",
        "upBreaks['Ticker'] = tickers\n",
        "downBreaks['Ticker'] = tickers\n",
        "for year in years:\n",
        "    y_ups = []\n",
        "    y_downs = []\n",
        "    for ticker in tickers:\n",
        "        y_ups.append(count_difs(year, take_prices(myDataPath + ticker + '.csv'))[0])\n",
        "        y_downs.append(count_difs(year, take_prices(myDataPath + ticker + '.csv'))[1])\n",
        "    upBreaks[year] = y_ups\n",
        "    downBreaks[year] = y_downs\n",
        "\n",
        "upBreaks.to_csv(myDataPath + \"up_breaks.csv\",\n",
        "    index = False, sep = ';', encoding = 'cp1251')\n",
        "downBreaks.to_csv(myDataPath + \"down_breaks.csv\",\n",
        "    index = False, sep = ';', encoding = 'cp1251')"
      ],
      "execution_count": 0,
      "outputs": []
    }
  ]
}